@use 'sass:color';
@use "sass:string";

@import './colors.scss';


@function color-scale($color, $scale, $hexed: true) {
    $ret: color.scale($color, $red: $scale, $green: $scale, $blue: $scale);
    @if ($scale == 100%) {
        $ret: $color;
    }

    @if $hexed {
        @return color.ie-hex-str($ret);
    }

    @return $ret;
}

@function property-name($property) {
    @if $property =="color" {
        @return "color";
    }

    @else if $property =="border-color" {
        @return "bd-color";
    }

    @else if $property =="background-color" {
        @return "bg-color";
    }

    @return "";
}

@function generate-radio-color($color, $scale) {
    $color-start: color-scale($color, $scale, false);
    $color-end: rgba(255, 255, 255, 0);
    @return #{'qradialgradient(spread:pad, cx:0.5, cy:0.5, radius:0.5, fx:0.5, fy:0.5, stop:0.4 ' + $color-start + ', stop:0.5 ' + $color-end + ')'};
}

@mixin _generate-colors($property: "color", $prop: "", $name: "", $value: "", $hover: true, $pressed: true, $disabled: true, $selector: "") {
    &[#{$prop}="#{$name}"] {
        @if string.index(#{$selector}, "QRadioButton")==1 {
            #{$property}: generate-radio-color($value, 100%);
        }

        @else {
            #{$property}: $value;
        }

        @if $disabled {
            &:disabled {
                @if string.index(#{$selector}, "QRadioButton")==1 {
                    #{$property}: generate-radio-color($value, 50%);
                }

                @else {
                    #{$property}: color-scale($value, 50%);
                }
            }
        }

        @if $hover {
            &:hover {
                @if string.index(#{$selector}, "QRadioButton")==1 {
                    #{$property}: generate-radio-color($value, 20%);
                }

                @else {
                    #{$property}: color-scale($value, 20%);
                }
            }
        }

        @if $pressed {
            &:pressed {
                @if string.index(#{$selector}, "QRadioButton")==1 {
                    #{$property}: generate-radio-color($value, 30%);
                }

                @else {
                    #{$property}: color-scale($value, 30%);
                }
            }
        }
    }
}

@mixin generate-colors($property: "color", $variant: true, $hover: true, $pressed: true, $disabled: true, $selector: "") {

    $prop: property-name($property);

    @each $name, $value in $__name-colors {
        @if $variant {
            @include _generate-colors($property, "variant", $name, $value, $hover, $pressed, $disabled, $selector);
        }

        @include _generate-colors($property, $prop, $name, $value, $hover, $pressed, $disabled, $selector);
    }

    @each $name, $shades in $__colors {
        @each $weight, $value in $shades {
            $tname: #{$name}-#{$weight};

            @if $variant {
                @include _generate-colors($property, "variant", $tname, $value, $hover, $pressed, $disabled, $selector);
            }

            @include _generate-colors($property, $prop, $tname, $value, $hover, $pressed, $disabled, $selector);
        }
    }
}